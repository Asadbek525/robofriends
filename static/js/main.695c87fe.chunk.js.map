{"version":3,"sources":["components/Card.js","components/CardArray.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","username","className","src","alt","CardArray","robots","map","user","i","SearchBox","onChange","placeholder","type","Scroll","props","children","ErrorBoundary","state","hasError","error","errorInfo","console","log","this","setState","Component","App","event","searchField","target","value","fetch","then","response","json","data","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2QAceA,EAZF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC/B,OACE,sBAAKC,UAAU,6DAAf,UACE,qBACEC,IAAG,+BAA0BH,EAA1B,iCAAsDA,EAAK,EAAK,GACnEI,IAAG,UAAKH,KAEV,6BAAKH,IACL,4BAAIC,QCMKM,EAbG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OAAOA,EAAOC,KAAI,SAACC,EAAMC,GACvB,OACE,cAAC,EAAD,CAEEX,KAAMQ,EAAOG,GAAGX,KAChBE,GAAIM,EAAOG,GAAGT,GACdC,SAAUK,EAAOG,GAAGR,SACpBF,MAAOO,EAAOG,GAAGV,OAJZU,OCMEC,G,MAVG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACE,uBACET,UAAU,gDACVU,YAAY,cACZC,KAAK,SACLF,SAAUA,MCFDG,G,YAJA,SAACC,GACd,OAAO,qBAAKb,UAAU,SAAf,SAAyBa,EAAMC,aCuBzBC,E,kDAxBb,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACXC,UAAU,GAHK,E,8DAWDC,EAAOC,GACvBC,QAAQC,IAAIH,EAAOC,GACnBG,KAAKC,SAAS,CAAEN,UAAU,M,+BAI1B,OAAIK,KAAKN,MAAMC,SACN,yDAEAK,KAAKT,MAAMC,Y,gDAbUI,GAC9B,MAAO,CAAED,UAAU,O,GATKO,aCgDbC,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAMFhB,SAAW,SAACiB,GACV,EAAKH,SAAS,CACZI,YAAaD,EAAME,OAAOC,SAP5B,EAAKb,MAAQ,CACXZ,OAAQ,GACRuB,YAAa,IAJH,E,gEAaO,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKX,SAAS,CAAEnB,OAAQ8B,S,+BAGlC,IAAD,EACyBZ,KAAKN,MAA7BZ,EADD,EACCA,OAAQuB,EADT,EACSA,YACVQ,EAAe/B,EAAOgC,QAAO,SAACC,GAClC,OAAOA,EAAMzC,KAAK0C,cAAcC,SAASZ,EAAYW,kBAEvD,OAAKlC,EAAOoC,OAGR,sBAAKxC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAWS,SAAUa,KAAKb,aAE5B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAWL,OAAQ+B,WAVF,kD,GAzBbX,aCKHiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.695c87fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id, username }) => {\r\n  return (\r\n    <div className='pa2 ma2 bg-light-green br3 bw2 shadow-5 ttc serif grow dib'>\r\n      <img\r\n        src={`https://robohash.org/${id}?size=200x200&&set=set${(id % 4) + 1}`}\r\n        alt={`${username}`}\r\n      />\r\n      <h3>{name}</h3>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardArray = ({ robots }) => {\r\n  return robots.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        name={robots[i].name}\r\n        id={robots[i].id}\r\n        username={robots[i].username}\r\n        email={robots[i].email}\r\n      />\r\n    );\r\n  });\r\n};\r\nexport default CardArray;\r\n","import React from 'react';\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = ({ onChange }) => {\r\n  return (\r\n    <input\r\n      className='pa2 ba  bg-lightest-blue b--green lh-copy br2'\r\n      placeholder='Search Robo'\r\n      type='search'\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n  return <div className='scroll'>{props.children}</div>;\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong!!!</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\nimport CardArray from '../components/CardArray';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: '',\r\n    };\r\n  }\r\n  onChange = (event) => {\r\n    this.setState({\r\n      searchField: event.target.value,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ robots: data }));\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchField } = this.state;\r\n    const filterRobots = robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    });\r\n    if (!robots.length) return <h1>Loading.....</h1>;\r\n    else {\r\n      return (\r\n        <div className='tc'>\r\n          <h1 className='f1'>RoboFriends</h1>\r\n          <div className='pa2'>\r\n            <SearchBox onChange={this.onChange} />\r\n          </div>\r\n          <ErrorBoundary>\r\n            <Scroll>\r\n              <CardArray robots={filterRobots} />\r\n            </Scroll>\r\n          </ErrorBoundary>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}